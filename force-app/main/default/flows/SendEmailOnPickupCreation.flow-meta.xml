<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_to_customer</name>
        <label>Send Email to customer</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>emailId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>noreply@gatikwe.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Pickup Request</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>mailTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_to_Pending</name>
        <label>Send Email to Pending</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>emailId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>noreply@gatikwe.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Pending Pickup</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>PendingEmailtemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Assign_Email</name>
        <label>Assign Email</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>emailId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>getCaseRecords.Customer_Email__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Case_Type</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Case_Type</name>
        <label>Check Case Type</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Pickup_Type</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pick Up</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_to_customer</targetReference>
            </connector>
            <label>Pickup Type</label>
        </rules>
        <rules>
            <name>Pending_Pickup_Type</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Pickup</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_to_Pending</targetReference>
            </connector>
            <label>Pending Pickup Type</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>address</name>
        <dataType>String</dataType>
        <expression>If({!$Record.Pickup_Address1__c}!=null, {!$Record.Pickup_Address1__c}, &apos;your address&apos;)</expression>
    </formulas>
    <formulas>
        <name>Now</name>
        <dataType>DateTime</dataType>
        <expression>Now()</expression>
    </formulas>
    <interviewLabel>Send Email on Pickup Creation {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SendEmailOnPickupCreation</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getCaseRecords</name>
        <label>getCaseRecords</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getCaseRecords</targetReference>
        </connector>
        <filterLogic>(1 OR 3) AND 2</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Pick Up</stringValue>
            </value>
        </filters>
        <filters>
            <field>Customer_Email__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Pending Pickup</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>mailTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Dear {!$Record.Shipper_Name__c},&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Your pickup request with reference number {!$Record.CaseNumber} has been successfully registered on {!$Record.CreatedDate} and is scheduled for {!$Record.Pickup_Date__c}. Our agent will pick-up the consignment from {!$Record.Pickup_Address1__c}{!$Record.Pickup_Address2__c} &lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.Pickup_Address3__c} &lt;/span&gt;{!$Record.Pickup_City__c}.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Please check the link below for details of restricted/prohibited consignments and ensure that you do not violate any guidelines.&lt;/p&gt;&lt;p&gt;https://www.gati.com/tools/prohibited-goods-for-shipping/&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;We will update you on the pickup status with further details once the request has been accepted.&lt;/p&gt;&lt;p&gt;Thank you for partnering with us for your logistics requirements.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Regards,&lt;/p&gt;&lt;p&gt;Team Gati &lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 12px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;&lt;img src=&quot;https://gatikwepvtltd--uat--c.documentforce.com/servlet/servlet.ImageServer?id=015p0000000fBaW&amp;amp;oid=00Dp0000000Dvv2&amp;amp;lastMod=1632729375000&quot;&gt;&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>PendingEmailtemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Dear {!&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;getCaseRecords&lt;/span&gt;.Customer_Name__c},&lt;/p&gt;&lt;p&gt;Thank you for your interest in Gati-KWE’s services for shipping your consignment.&amp;nbsp;&lt;/p&gt;&lt;p&gt;To confirm a pickup date for transporting your consignment from {!&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;getCaseRecords&lt;/span&gt;.Pick_Up_Pincode__r.Location__c} to {!&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;getCaseRecords&lt;/span&gt;.Delivery_Pincode_Location__r.Location__c}, all you need to do is send an email to customerservice@gati.com &lt;span style=&quot;font-size: 10pt; font-family: Verdana, sans-serif;&quot;&gt;by referring your ticket number ({&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;!getCaseRecords.CaseNumber} )&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; font-family: Verdana, sans-serif;&quot;&gt;&amp;nbsp;&lt;/span&gt;or directly schedule it on WhatsApp with Gati Genie.&lt;/p&gt;&lt;p&gt;Send ‘Hi’ as WhatsApp message on 7400012000 to get started.&lt;/p&gt;&lt;p&gt;We look forward to partnering with you for your logistics requirements.&lt;/p&gt;&lt;p&gt;Regards,&lt;/p&gt;&lt;p&gt;Team Gati &lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>emailId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
